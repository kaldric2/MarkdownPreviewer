{"version":3,"sources":["scripts.jsx"],"names":["Divider","Output","props","getMarkdown","bind","out","value","marked","__html","React","Component","Input","state","processInput","event","setState","target","ReactDOM","render","document","getElementById"],"mappings":";;;;;;;;;;AAAA,SAASA,OAAT,GAAmB;AACf,WAAO,6BAAK,WAAU,SAAf,GAAP;AACH;;IAEKC;;;AACF,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA,oHACTA,KADS;;AAEf,cAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,OAAnB;AAFe;AAGlB;;;;sCACa;AACV,gBAAIC,MAAM,EAAV;AACA,gBAAI,KAAKH,KAAL,CAAWI,KAAX,KAAqB,EAAzB,EAA6B;AACzBD,sBAAM,mBAAN;AACH,aAFD,MAEO;AACHA,sBAAME,OAAO,KAAKL,KAAL,CAAWI,KAAlB,CAAN;AACH;AACD,mBAAO,EAAEE,QAAQH,GAAV,EAAP;AACH;;;iCACQ;AACL,mBAAO,+BAAO,WAAU,cAAjB,EAAgC,IAAG,cAAnC,EAAkD,yBAAyB,KAAKF,WAAL,EAA3E,GAAP;AACH;;;;EAhBgBM,MAAMC;;IAmBrBC;;;AACF,mBAAYT,KAAZ,EAAmB;AAAA;;AAAA,mHACTA,KADS;;AAEf,eAAKU,KAAL,GAAa,EAAEN,OAAO,EAAT,EAAb;AACA,eAAKO,YAAL,GAAoB,OAAKA,YAAL,CAAkBT,IAAlB,QAApB;AAHe;AAIlB;;;;qCACYU,OAAO;AAChB,iBAAKC,QAAL,CAAc,EAAET,OAAOQ,MAAME,MAAN,CAAaV,KAAtB,EAAd;AACH;;;iCACQ;AACL,mBACI;AAAA;AAAA;AACI,kDAAU,WAAU,cAApB,EAAmC,IAAG,QAAtC,EAA+C,aAAY,qBAA3D,EAAiF,OAAO,KAAKM,KAAL,CAAWN,KAAnG,EAA0G,UAAU,KAAKO,YAAzH,GADJ;AAEI,oCAAC,OAAD,OAFJ;AAGI,oCAAC,MAAD,IAAQ,OAAO,KAAKD,KAAL,CAAWN,KAA1B;AAHJ,aADJ;AAOH;;;;EAjBeG,MAAMC;;AAoB1BO,SAASC,MAAT,CAAgB,oBAAC,KAAD,OAAhB,EAA2BC,SAASC,cAAT,CAAwB,iBAAxB,CAA3B","file":"all.js","sourcesContent":["function Divider() {\n    return <div className=\"divider\" />\n}\n\nclass Output extends React.Component {\n    constructor(props) {\n        super(props);\n        this.getMarkdown = this.getMarkdown.bind(this);\n    }\n    getMarkdown() {\n        var out = \"\";\n        if (this.props.value === \"\") {\n            out = \"See results here.\"\n        } else {\n            out = marked(this.props.value);\n        }\n        return { __html: out };\n    }\n    render() {\n        return <aside className=\"input-output\" id=\"react-output\" dangerouslySetInnerHTML={this.getMarkdown()}></aside>\n    }\n}\n\nclass Input extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { value: \"\" };\n        this.processInput = this.processInput.bind(this);\n    }\n    processInput(event) {\n        this.setState({ value: event.target.value });\n    }\n    render() {\n        return (\n            <main>\n                <textarea className=\"input-output\" id=\"editor\" placeholder=\"Enter markdown here\" value={this.state.value} onChange={this.processInput} />\n                <Divider />\n                <Output value={this.state.value} />\n            </main>\n        )\n    }\n}\n\nReactDOM.render(<Input />, document.getElementById('react-container'))\n"]}